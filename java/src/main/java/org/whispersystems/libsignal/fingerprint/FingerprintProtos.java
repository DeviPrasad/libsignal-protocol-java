// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/FingerprintProtocol.proto
// Protobuf Java Version: 4.28.2

package org.whispersystems.libsignal.fingerprint;

public final class FingerprintProtos {
  private FingerprintProtos() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      FingerprintProtos.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LogicalFingerprintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:textsecure.LogicalFingerprint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return Whether the content field is set.
     */
    boolean hasContent();
    /**
     * <pre>
     * optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return The content.
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code textsecure.LogicalFingerprint}
   */
  public static final class LogicalFingerprint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:textsecure.LogicalFingerprint)
      LogicalFingerprintOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        LogicalFingerprint.class.getName());
    }
    // Use LogicalFingerprint.newBuilder() to construct.
    private LogicalFingerprint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LogicalFingerprint() {
      content_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_LogicalFingerprint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_LogicalFingerprint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder.class);
    }

    private int bitField0_;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return Whether the content field is set.
     */
    @java.lang.Override
    public boolean hasContent() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return The content.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, content_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint)) {
        return super.equals(obj);
      }
      org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint other = (org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint) obj;

      if (hasContent() != other.hasContent()) return false;
      if (hasContent()) {
        if (!getContent()
            .equals(other.getContent())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasContent()) {
        hash = (37 * hash) + CONTENT_FIELD_NUMBER;
        hash = (53 * hash) + getContent().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code textsecure.LogicalFingerprint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:textsecure.LogicalFingerprint)
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_LogicalFingerprint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_LogicalFingerprint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder.class);
      }

      // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        content_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_LogicalFingerprint_descriptor;
      }

      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getDefaultInstanceForType() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance();
      }

      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint build() {
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint buildPartial() {
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint result = new org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.content_ = content_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint) {
          return mergeFrom((org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint other) {
        if (other == org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance()) return this;
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                content_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @return Whether the content field is set.
       */
      @java.lang.Override
      public boolean hasContent() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @return The content.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       * optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        content_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:textsecure.LogicalFingerprint)
    }

    // @@protoc_insertion_point(class_scope:textsecure.LogicalFingerprint)
    private static final org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint();
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalFingerprint>
        PARSER = new com.google.protobuf.AbstractParser<LogicalFingerprint>() {
      @java.lang.Override
      public LogicalFingerprint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LogicalFingerprint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalFingerprint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CombinedFingerprintsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:textsecure.CombinedFingerprints)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 version = 1;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     * @return Whether the localFingerprint field is set.
     */
    boolean hasLocalFingerprint();
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     * @return The localFingerprint.
     */
    org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getLocalFingerprint();
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder getLocalFingerprintOrBuilder();

    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     * @return Whether the remoteFingerprint field is set.
     */
    boolean hasRemoteFingerprint();
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     * @return The remoteFingerprint.
     */
    org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getRemoteFingerprint();
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder getRemoteFingerprintOrBuilder();
  }
  /**
   * Protobuf type {@code textsecure.CombinedFingerprints}
   */
  public static final class CombinedFingerprints extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:textsecure.CombinedFingerprints)
      CombinedFingerprintsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CombinedFingerprints.class.getName());
    }
    // Use CombinedFingerprints.newBuilder() to construct.
    private CombinedFingerprints(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CombinedFingerprints() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprints_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_ = 0;
    /**
     * <code>optional uint32 version = 1;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int LOCALFINGERPRINT_FIELD_NUMBER = 2;
    private org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint localFingerprint_;
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     * @return Whether the localFingerprint field is set.
     */
    @java.lang.Override
    public boolean hasLocalFingerprint() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     * @return The localFingerprint.
     */
    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getLocalFingerprint() {
      return localFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : localFingerprint_;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder getLocalFingerprintOrBuilder() {
      return localFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : localFingerprint_;
    }

    public static final int REMOTEFINGERPRINT_FIELD_NUMBER = 3;
    private org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint remoteFingerprint_;
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     * @return Whether the remoteFingerprint field is set.
     */
    @java.lang.Override
    public boolean hasRemoteFingerprint() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     * @return The remoteFingerprint.
     */
    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getRemoteFingerprint() {
      return remoteFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : remoteFingerprint_;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder getRemoteFingerprintOrBuilder() {
      return remoteFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : remoteFingerprint_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getLocalFingerprint());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getRemoteFingerprint());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLocalFingerprint());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRemoteFingerprint());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints)) {
        return super.equals(obj);
      }
      org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints other = (org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints) obj;

      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (getVersion()
            != other.getVersion()) return false;
      }
      if (hasLocalFingerprint() != other.hasLocalFingerprint()) return false;
      if (hasLocalFingerprint()) {
        if (!getLocalFingerprint()
            .equals(other.getLocalFingerprint())) return false;
      }
      if (hasRemoteFingerprint() != other.hasRemoteFingerprint()) return false;
      if (hasRemoteFingerprint()) {
        if (!getRemoteFingerprint()
            .equals(other.getRemoteFingerprint())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (hasLocalFingerprint()) {
        hash = (37 * hash) + LOCALFINGERPRINT_FIELD_NUMBER;
        hash = (53 * hash) + getLocalFingerprint().hashCode();
      }
      if (hasRemoteFingerprint()) {
        hash = (37 * hash) + REMOTEFINGERPRINT_FIELD_NUMBER;
        hash = (53 * hash) + getRemoteFingerprint().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code textsecure.CombinedFingerprints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:textsecure.CombinedFingerprints)
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprintsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprints_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.Builder.class);
      }

      // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getLocalFingerprintFieldBuilder();
          getRemoteFingerprintFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = 0;
        localFingerprint_ = null;
        if (localFingerprintBuilder_ != null) {
          localFingerprintBuilder_.dispose();
          localFingerprintBuilder_ = null;
        }
        remoteFingerprint_ = null;
        if (remoteFingerprintBuilder_ != null) {
          remoteFingerprintBuilder_.dispose();
          remoteFingerprintBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprints_descriptor;
      }

      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints getDefaultInstanceForType() {
        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.getDefaultInstance();
      }

      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints build() {
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints buildPartial() {
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints result = new org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.localFingerprint_ = localFingerprintBuilder_ == null
              ? localFingerprint_
              : localFingerprintBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.remoteFingerprint_ = remoteFingerprintBuilder_ == null
              ? remoteFingerprint_
              : remoteFingerprintBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints) {
          return mergeFrom((org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints other) {
        if (other == org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasLocalFingerprint()) {
          mergeLocalFingerprint(other.getLocalFingerprint());
        }
        if (other.hasRemoteFingerprint()) {
          mergeRemoteFingerprint(other.getRemoteFingerprint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                version_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getLocalFingerprintFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getRemoteFingerprintFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>optional uint32 version = 1;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional uint32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint localFingerprint_;
      private com.google.protobuf.SingleFieldBuilder<
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder> localFingerprintBuilder_;
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       * @return Whether the localFingerprint field is set.
       */
      public boolean hasLocalFingerprint() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       * @return The localFingerprint.
       */
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getLocalFingerprint() {
        if (localFingerprintBuilder_ == null) {
          return localFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : localFingerprint_;
        } else {
          return localFingerprintBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder setLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        if (localFingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localFingerprint_ = value;
        } else {
          localFingerprintBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder setLocalFingerprint(
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder builderForValue) {
        if (localFingerprintBuilder_ == null) {
          localFingerprint_ = builderForValue.build();
        } else {
          localFingerprintBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder mergeLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        if (localFingerprintBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            localFingerprint_ != null &&
            localFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance()) {
            getLocalFingerprintBuilder().mergeFrom(value);
          } else {
            localFingerprint_ = value;
          }
        } else {
          localFingerprintBuilder_.mergeFrom(value);
        }
        if (localFingerprint_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder clearLocalFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        localFingerprint_ = null;
        if (localFingerprintBuilder_ != null) {
          localFingerprintBuilder_.dispose();
          localFingerprintBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder getLocalFingerprintBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocalFingerprintFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder getLocalFingerprintOrBuilder() {
        if (localFingerprintBuilder_ != null) {
          return localFingerprintBuilder_.getMessageOrBuilder();
        } else {
          return localFingerprint_ == null ?
              org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : localFingerprint_;
        }
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder> 
          getLocalFingerprintFieldBuilder() {
        if (localFingerprintBuilder_ == null) {
          localFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder>(
                  getLocalFingerprint(),
                  getParentForChildren(),
                  isClean());
          localFingerprint_ = null;
        }
        return localFingerprintBuilder_;
      }

      private org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint remoteFingerprint_;
      private com.google.protobuf.SingleFieldBuilder<
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder> remoteFingerprintBuilder_;
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       * @return Whether the remoteFingerprint field is set.
       */
      public boolean hasRemoteFingerprint() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       * @return The remoteFingerprint.
       */
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getRemoteFingerprint() {
        if (remoteFingerprintBuilder_ == null) {
          return remoteFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : remoteFingerprint_;
        } else {
          return remoteFingerprintBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder setRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        if (remoteFingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          remoteFingerprint_ = value;
        } else {
          remoteFingerprintBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder setRemoteFingerprint(
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder builderForValue) {
        if (remoteFingerprintBuilder_ == null) {
          remoteFingerprint_ = builderForValue.build();
        } else {
          remoteFingerprintBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder mergeRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        if (remoteFingerprintBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            remoteFingerprint_ != null &&
            remoteFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance()) {
            getRemoteFingerprintBuilder().mergeFrom(value);
          } else {
            remoteFingerprint_ = value;
          }
        } else {
          remoteFingerprintBuilder_.mergeFrom(value);
        }
        if (remoteFingerprint_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder clearRemoteFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remoteFingerprint_ = null;
        if (remoteFingerprintBuilder_ != null) {
          remoteFingerprintBuilder_.dispose();
          remoteFingerprintBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder getRemoteFingerprintBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRemoteFingerprintFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder getRemoteFingerprintOrBuilder() {
        if (remoteFingerprintBuilder_ != null) {
          return remoteFingerprintBuilder_.getMessageOrBuilder();
        } else {
          return remoteFingerprint_ == null ?
              org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : remoteFingerprint_;
        }
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder> 
          getRemoteFingerprintFieldBuilder() {
        if (remoteFingerprintBuilder_ == null) {
          remoteFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder>(
                  getRemoteFingerprint(),
                  getParentForChildren(),
                  isClean());
          remoteFingerprint_ = null;
        }
        return remoteFingerprintBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:textsecure.CombinedFingerprints)
    }

    // @@protoc_insertion_point(class_scope:textsecure.CombinedFingerprints)
    private static final org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints();
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CombinedFingerprints>
        PARSER = new com.google.protobuf.AbstractParser<CombinedFingerprints>() {
      @java.lang.Override
      public CombinedFingerprints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CombinedFingerprints> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CombinedFingerprints> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_textsecure_LogicalFingerprint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_textsecure_LogicalFingerprint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_textsecure_CombinedFingerprints_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_textsecure_CombinedFingerprints_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"protobuf/FingerprintProtocol.proto\022\nte" +
      "xtsecure\"%\n\022LogicalFingerprint\022\017\n\007conten" +
      "t\030\001 \001(\014\"\234\001\n\024CombinedFingerprints\022\017\n\007vers" +
      "ion\030\001 \001(\r\0228\n\020localFingerprint\030\002 \001(\0132\036.te" +
      "xtsecure.LogicalFingerprint\0229\n\021remoteFin" +
      "gerprint\030\003 \001(\0132\036.textsecure.LogicalFinge" +
      "rprintB=\n(org.whispersystems.libsignal.f" +
      "ingerprintB\021FingerprintProtos"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_textsecure_LogicalFingerprint_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_textsecure_LogicalFingerprint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_textsecure_LogicalFingerprint_descriptor,
        new java.lang.String[] { "Content", });
    internal_static_textsecure_CombinedFingerprints_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_textsecure_CombinedFingerprints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_textsecure_CombinedFingerprints_descriptor,
        new java.lang.String[] { "Version", "LocalFingerprint", "RemoteFingerprint", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
